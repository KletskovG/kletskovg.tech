name: Publish project

on:
  workflow_dispatch
jobs:
  build:
    name: Build
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        node_version: [14]
    
    env:
      LOGIN: ${{ secrets.DOCKER_LOGIN }}
      DOCKER: ${{ secrets.DOCKER_NAME }}
    
    steps:
    - uses: actions/checkout@v1
    - name: Use Node.js ${{ matrix.node_version }}
      uses: actions/setup-node@v1
      with:
        version: ${{ matrix.node_version }}
  ### Second Job
  publish_back:
    needs: build
    name: Publish Backend
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        node_version: [14]
    env:
      LOGIN: ${{ secrets.DOCKER_LOGIN }}
      DOCKER: ${{ secrets.DOCKER_NAME }}
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node_version }}
      uses: actions/setup-node@v1
      with:
        version: ${{ matrix.node_version }}
    - name: Build server
      run: |
        cd server
        yarn install
        yarn build
    - name: Publish Server to Registry
      uses: elgohr/Publish-Docker-Github-Action@master
      with:
        name: kletskovg/sitebackend:latest
        username: ${{secrets.DOCKER_LOGIN}}
        password: ${{ secrets.DOCKER_PASSWORD }}
        context: ./server
  publish_front:
    needs: build
    name: Publish Frontend
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        node_version: [14]
    env:
      LOGIN: ${{ secrets.DOCKER_LOGIN }}
      DOCKER: ${{ secrets.DOCKER_NAME }}
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node_version }}
      uses: actions/setup-node@v1
      with:
        version: ${{ matrix.node_version }}
    - name: Build Frontend
      run: |
        cd client
        npm i
        docker build -t kletskovg/sitefrontend:prod .
        docker run -d -p 80:80 kletskovg/sitefrontend:prod
    - name: Publish Frontend to Registry
      uses: elgohr/Publish-Docker-Github-Action@master
      with:
        name: kletskovg/sitefrontend:latest
        username: ${{secrets.DOCKER_LOGIN}}
        password: ${{ secrets.DOCKER_PASSWORD }}
        context: ./client
  update_cluster:
    needs: [build, publish_back, publish_front]
    name: Update cluster
    runs-on: ubuntu-18.04
    steps:
      - name: Run script
        run: ${{ secrets.UPDATE_CLUSTER }}